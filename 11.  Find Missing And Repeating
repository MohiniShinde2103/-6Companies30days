/*Problem Statement
Given an unsorted array Arr of size N of positive integers.
One number 'A' from set {1, 2, â€¦N} is missing and one number 'B' occurs twice in array. 
Find these two numbers. */

/*
Input:
N = 2
Arr[] = {2, 2}
Output: 2 1
*/

import java.io.*;
import java.util.*;

class GFG {
    // Driver code
    public static void main(String[] args) throws Exception {
        BufferedReader br =
            new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(br.readLine().trim());
        while (t-- > 0) {
            int n = Integer.parseInt(br.readLine().trim());
            String[] str = br.readLine().split(" ");

            int[] a = new int[n];
            for (int i = 0; i < n; i++) {
                a[i] = Integer.parseInt(str[i]);
            }

            int[] ans = new Solve().findTwoElement(a, n);
            System.out.println(ans[0] + " " + ans[1]);
        }
    }
}

class Solve {
    int[] findTwoElement(int arr[], int n) {
        // code here
        int a=0,b=0;
        for(int i=0;i<n;i++){
            if(arr[Math.abs(arr[i])-1]<0){
                a=Math.abs(arr[i]);
            }
            else{
                arr[Math.abs(arr[i])-1]=-arr[Math.abs(arr[i])-1];
            }
        }
        for(int i=0;i<n;i++){
            if(arr[i]>0){
                b=i+1;
                break;
            }
        }
        return new int[]{a,b};
    }
}
