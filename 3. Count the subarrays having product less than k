/*Problem Statement
Given an array of positive numbers, the task is to find the number of possible contiguous subarrays having product less than a given number k.*/

/*
Input : 
n = 4, k = 10
a[] = {1, 2, 3, 4}
Output : 
7
*/

//Initial Template for Java
import java.util.*;
import java.lang.*;
import java.io.*;
class GFG {
	public static void main(String[] args) throws IOException
	{
	    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(br.readLine().trim()); // Inputting the testcases
        while(t-->0)
        {
            StringTokenizer stt = new StringTokenizer(br.readLine());
             long n = Long.parseLong(stt.nextToken());
            long k = Long.parseLong(stt.nextToken());
           long a[] = new long[(int)(n)];
            String inputLine[] = br.readLine().trim().split(" ");
            for (int i = 0; i < n; i++) {
                a[i] = Long.parseLong(inputLine[i]);
            }
            Solution obj = new Solution();
            System.out.println(obj.countSubArrayProductLessThanK(a, n, k));
            
        }
	}
}
class Solution {
    public int countSubArrayProductLessThanK(long a[], long n, long k)
    {
       int ans=0;
	   int i=0,j=0;
	   long product=1;
	   while(i<n && j<n){
	       product*=a[j];
	       while(i<=j && product>=k)
	        product/=a[i++];
	        ans+=(j-i+1);
	        ++j;
	   }
	   return ans;
    }
}
