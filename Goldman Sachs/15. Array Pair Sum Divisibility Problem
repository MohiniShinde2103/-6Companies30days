/* Problem Statement
Given an array of integers and a number k, write a function that returns true if given array can be divided into pairs such that sum of every pair is divisible by k. */

/*
Input : arr = [9, 5, 7, 3], k = 6
Output: True

Input : arr = [2, 4, 1, 3], k = 4
Output: False
*/


class Solution {
     public boolean canPair(int ar[], int k) {
        if (ar.length % 2 == 1)
          return false;
        HashMap<Integer, Integer> hm = new HashMap<>();
        for (int i = 0; i < ar.length; i++) {
            int rem = ((ar[i] % k) + k) % k;
            if (!hm.containsKey(rem)) {
                hm.put(rem, 0);
            }
            hm.put(rem, hm.get(rem) + 1);
        }
        for (int i = 0; i < ar.length; i++) {
            int rem = ((ar[i] % k) + k) % k;
            if (2 * rem == k) {
                if (hm.get(rem) % 2 == 1) 
                    return false;
            }
            else if (rem == 0) {
                if (hm.get(rem) % 2 == 1) 
                    return false;
            }
             else {
                if (hm.get(k - rem) != hm.get(rem)) 
                    return false;
            }
        }
        return true;
    }
}
