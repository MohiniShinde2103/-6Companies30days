/*Problem Statement
A top secret message containing letters from A-Z is being encoded to numbers using the following mapping:
'A' -> 1
'B' -> 2
...
'Z' -> 26
You are an FBI agent. You have to determine the total number of ways that message can be decoded,
as the answer can be large return the answer modulo 109 + 7.
Note: An empty digit sequence is considered to have one decoding. 
It may be assumed that the input contains valid digits from 0 to 9 and If there are leading 0’s, 
extra trailing 0’s and two or more consecutive 0’s then it is an invalid string. */

/*
Input: str = "123"
Output: 3

Input: str = "27"
Output: 1
*/


class Solution
{
    public long backtrack(StringBuilder sb, int start, String str, long[]visited){
        if(start>=str.length()){
            return 1;
        } 
        if(str.charAt(start)=='0'){
            return 0;
        }
        long count = 0;
        if(visited[start]!=-1){
            return visited[start];
        }
        for(int i=1; i<=2 && start+i<=str.length();i++){
            String temp = str.substring(start, start+i);
            int val = Integer.valueOf(temp);
            if(val>=1 && val<=26){  
                count = (count + backtrack(sb,start+i,str, visited))%1000000007;   
            }
        }
        visited[start] = count;
        return count;   
    }
    public int CountWays(String str)
    {
        long[]dp = new long[str.length()];
        Arrays.fill(dp,-1);
        return (int)backtrack(new StringBuilder(""), 0,str,dp);
    }
}
