/* Problem Statement
Given an array of strings, return all groups of strings that are anagrams. 
The groups must be created in order of their appearance in the original array. Look at the sample case for clarification.
*/

/*
Input:
N = 5
words[] = {act,god,cat,dog,tac}
Output: 
god dog
act cat tac

Input:
N = 3
words[] = {no,on,is}
Output: 
no on
is
*/

class Solution {
    public List<List<String>> Anagrams(String[] string_list) {
        // Code here
        HashMap <String,List<String>> mp=new HashMap<>();
        List<List<String>> ans=new ArrayList<List<String>>();
        for(String i:string_list){
            char ch[]=i.toCharArray();
            Arrays.sort(ch);
            String s=String.valueOf(ch);
            if(mp.containsKey(s)){
                mp.get(s).add(i);
            }
            else{
                List<String> li=new ArrayList<>();
                li.add(i);
                ans.add(li);
                mp.put(s,li);
            }
        }
        return ans;
    }
}
