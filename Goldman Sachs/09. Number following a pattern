/* Problem Statement
Given a pattern containing only I's and D's. I for increasing and D for decreasing.
Devise an algorithm to print the minimum number following that pattern.
Digits from 1-9 and digits can't repeat. */

/*
Input:
D
Output:
21

Input:
IIDDD
Output:
126543
*/


class Solution{
    static String printMinNumberForPattern(String S){
        Stack<Integer> st =  new Stack<>();
        String str ="";
        int num = 1;
        for(int i=0;i<S.length();i++){
            char ch = S.charAt(i);
            if(ch == 'D'){
                st.push(num);
                num++;
            }
            else{
                st.push(num);
                num++;
                while(st.size()>0){
                    str+=st.pop();
                }
            }
        }
        st.push(num);
        while(st.size()>0){
            str+= st.pop();
        }
        return str;
    }
}

