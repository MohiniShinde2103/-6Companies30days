/* Problem Statement
M items are to be delivered in a circle of size N.
Find the position where the M-th item will be delivered if we start from a given position K. 
Note that items are distributed at adjacent positions starting from K. */

/*
Input:
N = 5, M = 2, K = 1
Output:
2

Input:
N = 5, M = 8, K = 2
Output:
4
*/

class Solution {
    static int findPosition(int N , int M , int K) {
       
        if (M <= N - K + 1)
            return M + K - 1;   
        M -= (N - K + 1);
        if (M % N == 0)
            return N;
        else
            return (M % N);
    }
};

// or

class Solution {
    static int findPosition(int N , int M , int K) {
        return ((K+M-1)%N==0)?N:(K+M-1)%N;
    }
};
