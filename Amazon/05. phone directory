/* Problem Statement
Given a list of contacts contact[] of length n where each contact is a string which exist in a phone directory and a query string s. 
The task is to implement a search query for the phone directory. 
Run a search query for each prefix p of the query string s (i.e. from  index 1 to |s|) 
that prints all the distinct contacts which have the same prefix as p in lexicographical increasing order.
Please refer the explanation part for better understanding.
Note: If there is no match between query and contacts, print "0".
*/

/*
Input: 
n = 3
contact[] = {"geeikistest", "geeksforgeeks", 
"geeksfortest"}
s = "geeips"
Output:
geeikistest geeksforgeeks geeksfortest
geeikistest geeksforgeeks geeksfortest
geeikistest geeksforgeeks geeksfortest
geeikistest
0
0
*/


class Solution{
    static ArrayList<ArrayList<String>> showContacts(int n, 
                                        String contact[], String s)
    {
        // code here
        HashSet<String> hs=new HashSet<>();
        for(String ele:contact)
            hs.add(ele);
        contact=new String[hs.size()];
        int k=0;
        for(String ele:hs)
            contact[k++]=ele;
        Arrays.sort(contact);
        ArrayList<ArrayList<String>> result=new ArrayList<>();
        for(int i=0;i<s.length();i++)
        {
            String pat=s.substring(0,i+1);
            ArrayList<String> tmp=new ArrayList<>();
            for(int j=0;j<contact.length;j++)
            {
                if(search(pat,contact[j]))
                    tmp.add(contact[j]);
            }
            if(tmp.isEmpty())
                tmp.add("0");
            result.add(tmp);
        }
        //Collections.sort(result);
        return result;
    }
    static boolean search(String str,String s)
    {
        return s.startsWith(str);
    }
}
