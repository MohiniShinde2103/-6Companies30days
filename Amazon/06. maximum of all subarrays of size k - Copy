/* Problem Statement
Given an array arr[] of size N and an integer K. Find the maximum for each and every contiguous subarray of size K.
*/

/*
Input:
N = 9, K = 3
arr[] = 1 2 3 1 4 5 2 3 6
Output: 
3 3 4 5 5 5 6 

Input:
N = 10, K = 4
arr[] = 8 5 10 7 9 4 15 12 90 13
Output: 
10 10 10 15 15 90 90
*/


class Solution
{
    //Function to find maximum of each subarray of size k.
    static ArrayList <Integer> max_of_subarrays(int arr[], int n, int k)
    {
        // Your code here
        ArrayList<Integer> arr1=new ArrayList<Integer>();
        PriorityQueue<Integer> pq=new PriorityQueue<>(Collections.reverseOrder());
        int i=0;
        for(i=0;i<k;i++)
            pq.add(arr[i]);
        arr1.add(pq.peek());
        pq.remove(arr[0]);
        for(;i<n;i++)
        {
            pq.add(arr[i]);
            arr1.add(pq.peek());
            pq.remove(arr[i-k+1]);
        }
        return arr1;
    }
}
